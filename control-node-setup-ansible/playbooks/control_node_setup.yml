---
- name: Configure RHEL 9 Ansible Control Node
  hosts: localhost
  become: yes
  vars:
    ansible_control_node_ip: "192.168.0.100"
    gateway_ip: "192.168.0.1"
    log_file: "/var/log/ansible_control_setup.log"
    dns_servers: ["8.8.8.8", "8.8.4.4"]
  vars_files:
    - ../vars/control_node_vars.yml  # Load sensitive vars

  tasks:
    - name: Ensure log file exists
      ansible.builtin.file:
        path: "{{ log_file }}"
        state: touch
        mode: "0644"
      register: log_setup

    - name: Rotate log file if larger than 10MB
      ansible.builtin.shell: |
        if [ $(stat -c%s "{{ log_file }}") -gt 10485760 ]; then
          mv "{{ log_file }}" "{{ log_file }}.$(date '+%Y%m%d%H%M%S')"
          touch "{{ log_file }}"
          chmod 644 "{{ log_file }}"
        fi
      when: log_setup.stat.size is defined and log_setup.stat.size > 10485760

    - name: Configure static IP for control node
      ansible.builtin.nmcli:
        # Set static IP only if current IP differs
        conn_name: "{{ ansible_default_ipv4.interface }}"
        type: ethernet
        ip4: "{{ ansible_control_node_ip }}/24"
        gw4: "{{ gateway_ip }}"
        dns4: "{{ dns_servers }}"
        state: present
        method4: manual
      when: ansible_default_ipv4.address != ansible_control_node_ip

    - name: Register system with Red Hat subscription
      community.general.redhat_subscription:
        state: present
        username: "{{ sub_username }}"
        password: "{{ sub_password }}"
        auto_attach: true
      register: sub_result
      failed_when: sub_result.failed and 'already registered' not in sub_result.msg

    - name: Log subscription status
      ansible.builtin.debug:
        msg: "Subscription registered successfully"
      when: sub_result.changed

    - name: Install additional packages
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: present
      loop:
        - curl
        - openssl

    - name: Install pywinrm via pip
      ansible.builtin.pip:
        name: pywinrm
        state: present
        executable: pip3

    - name: Enable and start SSH service
      ansible.builtin.service:
        name: sshd
        state: started
        enabled: yes

    - name: Configure firewall for SSH
      ansible.posix.firewalld:
        service: ssh
        permanent: yes
        state: enabled
        immediate: yes

    - name: Generate SSH key pair for root
      ansible.builtin.user:
        name: root
        generate_ssh_key: yes
        ssh_key_bits: 4096
        ssh_key_file: /root/.ssh/id_rsa
        ssh_key_type: rsa

    - name: Ensure SSH private key is present
      ansible.builtin.copy:
        content: "{{ ssh_private_key }}"
        dest: /root/.ssh/id_rsa
        mode: "0600"
      when: not ansible_facts['stat']['/root/.ssh/id_rsa']['exists'] | default(false)

    - name: Set SSH key permissions
      ansible.builtin.file:
        path: "{{ item }}"
        mode: "{{ '0700' if item == '/root/.ssh' else '0600' }}"
      loop:
        - /root/.ssh
        - /root/.ssh/id_rsa
        - /root/.ssh/id_rsa.pub

    - name: Configure SSH to disable password authentication
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^#?PasswordAuthentication"
        line: "PasswordAuthentication no"
      notify: Restart sshd

  handlers:
    - name: Restart sshd
      ansible.builtin.service:
        name: sshd
        state: restarted
